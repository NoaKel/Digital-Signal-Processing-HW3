clear all; close all; clc;

%% question 3 
[channel Fs]= auread('channel.wav');

Xf1 = (abs(fftshift(fft(channel(1:1000)))));
Xf2 = (abs(fftshift(fft(channel(50001:51000)))));
Xf3 = (abs(fftshift(fft(channel(100001:101000)))));

N = 1000;
f = linspace(-Fs/2,Fs/2,N);

% plot
figure;
subplot(3,1,1);
plot(f,mag2db(Xf1)); 
xlabel('f [Hz]');
ylabel('X [dB]'); 
title('|DFT x[n]| - (samples 1-1,000)');
subplot(3,1,2);
plot(f,mag2db(Xf2)); 
xlabel('f [Hz]');
ylabel('X [dB]'); 
title('|DFT x[n]| - (samples 50,001-51,000)');
subplot(3,1,3);
plot(f,mag2db(Xf3)); 
xlabel('f [Hz]');
ylabel('X [dB]'); 
title('|DFT x[n]| - (samples 100,001-101,000)');

%% question 5
t = (0:(length(channel)-1))/Fs;
t = t';
M = [t channel];

% MATLAB Code
% Generated by MATLAB(R) 8.3 and the Signal Processing Toolbox 6.21.
% Generated on: 11-Jan-2016 21:12:02

% Equiripple Highpass filter designed using the FIRPM function.

% All frequency values are in Hz.
Fs = 80000;  % Sampling Frequency

Fstop = 24000;  % Stopband Frequency
Fpass = 26000;  % Passband Frequency
Dstop = 0.001;  % Stopband Attenuation
Dpass = 0.001;  % Passband Ripple
dens  = 16;     % Density Factor

% Calculate the order from the parameters using FIRPMORD.
[N, Fo, Ao, W] = firpmord([Fstop, Fpass]/(Fs/2), [0 1], [Dstop, Dpass]);

% Calculate the coefficients using the FIRPM function.
b  = firpm(N, Fo, Ao, W, {dens});
Hd = dfilt.dffir(b);

figure;
n=(0:1:130)/Fs;
stem(n,b); % Plot the HPF Coefficients
xlabel('time [sec]');
ylabel('h[n]'); 
title('h[n] - Impulse Response of HPF');

%% question 6
figure;
freqz(b);

%% question 7
sim('Ex3.mdl');
Xf_filered = fftshift(fft(filtered_signal.signals.values(100001:101000)));

% plot
figure;
subplot(2,1,1);
plot(f,mag2db(abs(Xf_filered))); 
xlabel('f [Hz]');
ylabel('Xf Filtered [dB]'); 
title('|DFT x[n]| - Filtered (samples 100,001-101,000)');

%% question 8 
Xf_Demodulated = fftshift(fft(demodulated_signal.signals.values(100001:101000)));

% plot
subplot(2,1,2);
plot(f,mag2db(abs(Xf_Demodulated))); 
xlabel('f [Hz]');
ylabel('X f DeModulated [dB]'); 
title('|DFT x[n]| - Demodulated (samples 100,001-101,000)');